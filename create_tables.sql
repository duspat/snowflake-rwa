--- RAW TABLES

create or replace TRANSIENT TABLE STORE_DB.RAW.CUSTOMER (
	C_CUSTOMER_SK NUMBER(38,0),
	C_CUSTOMER_ID VARCHAR(16),
	C_CURRENT_CDEMO_SK NUMBER(38,0),
	C_CURRENT_HDEMO_SK NUMBER(38,0),
	C_CURRENT_ADDR_SK NUMBER(38,0),
	C_FIRST_SHIPTO_DATE_SK NUMBER(38,0),
	C_FIRST_SALES_DATE_SK NUMBER(38,0),
	C_SALUTATION VARCHAR(10),
	C_FIRST_NAME VARCHAR(20),
	C_LAST_NAME VARCHAR(30),
	C_PREFERRED_CUST_FLAG VARCHAR(1),
	C_BIRTH_DAY NUMBER(38,0),
	C_BIRTH_MONTH NUMBER(38,0),
	C_BIRTH_YEAR NUMBER(38,0),
	C_BIRTH_COUNTRY VARCHAR(20),
	C_LOGIN VARCHAR(13),
	C_EMAIL_ADDRESS VARCHAR(50),
	C_LAST_REVIEW_DATE VARCHAR(10),
	C_CREATED_DATE DATE
);

create or replace TRANSIENT TABLE STORE_DB.RAW.ITEM (
	I_ITEM_SK NUMBER(38,0),
	I_ITEM_ID VARCHAR(16),
	I_REC_START_DATE DATE,
	I_REC_END_DATE DATE,
	I_ITEM_DESC VARCHAR(200),
	I_CURRENT_PRICE NUMBER(7,2),
	I_WHOLESALE_COST NUMBER(7,2),
	I_BRAND_ID NUMBER(38,0),
	I_BRAND VARCHAR(50),
	I_CLASS_ID NUMBER(38,0),
	I_CLASS VARCHAR(50),
	I_CATEGORY_ID NUMBER(38,0),
	I_CATEGORY VARCHAR(50),
	I_MANUFACT_ID NUMBER(38,0),
	I_MANUFACT VARCHAR(50),
	I_SIZE VARCHAR(20),
	I_FORMULATION VARCHAR(20),
	I_COLOR VARCHAR(20),
	I_UNITS VARCHAR(10),
	I_CONTAINER VARCHAR(10),
	I_MANAGER_ID NUMBER(38,0),
	I_PRODUCT_NAME VARCHAR(50)
);

create or replace TRANSIENT TABLE STORE_DB.RAW.STORE (
	S_STORE_SK NUMBER(38,0),
	S_STORE_ID VARCHAR(16),
	S_REC_START_DATE DATE,
	S_REC_END_DATE DATE,
	S_CLOSED_DATE_SK NUMBER(38,0),
	S_STORE_NAME VARCHAR(50),
	S_NUMBER_EMPLOYEES NUMBER(38,0),
	S_FLOOR_SPACE NUMBER(38,0),
	S_HOURS VARCHAR(20),
	S_MANAGER VARCHAR(40),
	S_MARKET_ID NUMBER(38,0),
	S_GEOGRAPHY_CLASS VARCHAR(100),
	S_MARKET_DESC VARCHAR(100),
	S_MARKET_MANAGER VARCHAR(40),
	S_DIVISION_ID NUMBER(38,0),
	S_DIVISION_NAME VARCHAR(50),
	S_COMPANY_ID NUMBER(38,0),
	S_COMPANY_NAME VARCHAR(50),
	S_STREET_NUMBER VARCHAR(10),
	S_STREET_NAME VARCHAR(60),
	S_STREET_TYPE VARCHAR(15),
	S_SUITE_NUMBER VARCHAR(10),
	S_CITY VARCHAR(60),
	S_COUNTY VARCHAR(30),
	S_STATE VARCHAR(2),
	S_ZIP VARCHAR(10),
	S_COUNTRY VARCHAR(20),
	S_GMT_OFFSET NUMBER(5,2),
	S_TAX_PRECENTAGE NUMBER(5,2),
	CLOSED_DATE DATE
);

create or replace TRANSIENT TABLE STORE_DB.RAW.STORE_SALES (
	SS_SOLD_DATE_SK NUMBER(38,0),
	SS_SOLD_TIME_SK NUMBER(38,0),
	SS_ITEM_SK NUMBER(38,0),
	SS_CUSTOMER_SK NUMBER(38,0),
	SS_CDEMO_SK NUMBER(38,0),
	SS_HDEMO_SK NUMBER(38,0),
	SS_ADDR_SK NUMBER(38,0),
	SS_STORE_SK NUMBER(38,0),
	SS_PROMO_SK NUMBER(38,0),
	SS_TICKET_NUMBER NUMBER(38,0),
	SS_QUANTITY NUMBER(38,0),
	SS_WHOLESALE_COST NUMBER(7,2),
	SS_LIST_PRICE NUMBER(7,2),
	SS_SALES_PRICE NUMBER(7,2),
	SS_EXT_DISCOUNT_AMT NUMBER(7,2),
	SS_EXT_SALES_PRICE NUMBER(7,2),
	SS_EXT_WHOLESALE_COST NUMBER(7,2),
	SS_EXT_LIST_PRICE NUMBER(7,2),
	SS_EXT_TAX NUMBER(7,2),
	SS_COUPON_AMT NUMBER(7,2),
	SS_NET_PAID NUMBER(7,2),
	SS_NET_PAID_INC_TAX NUMBER(7,2),
	SS_NET_PROFIT NUMBER(7,2),
	SS_SOLD_DATE DATE,
	SS_SOLD_TIME VARCHAR(16777216)
);


-- STAGING TABLES

create or replace TRANSIENT TABLE STORE_DB.STAGING.CUSTOMER (
	CUSTOMER_ID NUMBER(38,0),
	CUSTOMER_EXT_ID VARCHAR(16),
	FIRST_NAME VARCHAR(20),
	EMAIL_ADDRESS_HASH VARCHAR(32),
	LAST_NAME VARCHAR(30),
	PREFERRED_CUST_FLAG VARCHAR(1),
	BIRTH_DAY NUMBER(38,0),
	BIRTH_MONTH NUMBER(38,0),
	BIRTH_YEAR NUMBER(38,0),
	CREATED_DATE DATE,
	IS_DELETED BOOLEAN,
	ATTRIBUTE_HASH VARCHAR(32)
);

create or replace TRANSIENT TABLE STORE_DB.STAGING.ITEM (
	ITEM_ID NUMBER(38,0),
	ITEM_EXT_ID VARCHAR(16),
	PRODUCT_NAME VARCHAR(50),
	CATEGORY VARCHAR(50),
	BRAND VARCHAR(50),
	COLOR VARCHAR(20),
	SIZE VARCHAR(20),
	ADD_DATE DATE,
	DISCONTINUED_DATE DATE,
	IS_DELETED BOOLEAN
);

create or replace TRANSIENT TABLE STORE_DB.STAGING.STORE (
	STORE_ID NUMBER(38,0),
	STORE_EXT_ID VARCHAR(16),
	STORE_NAME VARCHAR(50),
	STORE_COMPANY_NAME VARCHAR(50),
	STORE_CITY VARCHAR(60),
	STORE_COUNTY VARCHAR(30),
	STORE_STATE VARCHAR(2),
	STORE_ZIP VARCHAR(10),
	STORE_COUNTRY VARCHAR(20),
	ADD_DATE DATE,
	DISCONTINUED_DATE DATE,
	IS_DELETED BOOLEAN,
	ATTRIBUTE_HASH VARCHAR(32)
);

create or replace TRANSIENT TABLE STORE_DB.STAGING.STORE_SALES (
	TICKET_NUMBER NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	STORE_ID NUMBER(38,0),
	ITEM_ID NUMBER(38,0),
	QUANTITY NUMBER(38,0),
	SALES_PRICE NUMBER(7,2),
	EXT_SALES_PRICE NUMBER(7,2),
	COUPON_AMT NUMBER(7,2),
	PAID_AMOUNT NUMBER(7,2),
	SS_SOLD_DATE DATE,
	SOLD_AT TIMESTAMP_NTZ(9),
	IS_DELETED BOOLEAN
);

--- GOLD TABLES

create or replace TABLE STORE_DB.DATA.DIM_CUSTOMER (
	CUSTOMER_ID NUMBER(38,0),
	CUSTOMER_EXT_ID VARCHAR(16),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(30),
	EMAIL_ADDRESS_HASH VARCHAR(32),
	PREFERRED_CUST_FLAG VARCHAR(1),
	BIRTH_DAY NUMBER(38,0),
	BIRTH_MONTH NUMBER(38,0),
	BIRTH_YEAR NUMBER(38,0),
	CREATED_DATE DATE,
    FROM_DT TIMESTAMP,
    TO_DT TIMESTAMP,
    CURRENT_FLAG BOOLEAN,
    ATTRIBUTE_HASH VARCHAR(32)
);

create or replace TABLE STORE_DB.DATA.DIM_ITEM (
	ITEM_ID NUMBER(38,0),
	ITEM_EXT_ID VARCHAR(16),
	PRODUCT_NAME VARCHAR(50),
	CATEGORY VARCHAR(50),
	BRAND VARCHAR(50),
	COLOR VARCHAR(20),
	SIZE VARCHAR(20),
	ADD_DATE DATE,
	DISCONTINUED_DATE DATE
);

create or replace TABLE STORE_DB.DATA.DIM_STORE (
	STORE_ID NUMBER(38,0),
	STORE_EXT_ID VARCHAR(16),
	STORE_NAME VARCHAR(50),
	STORE_COMPANY_NAME VARCHAR(50),
	STORE_CITY VARCHAR(60),
	STORE_COUNTY VARCHAR(30),
	STORE_STATE VARCHAR(2),
	STORE_ZIP VARCHAR(10),
	STORE_COUNTRY VARCHAR(20),
	ADD_DATE DATE,
	DISCONTINUED_DATE DATE,
    FROM_DT TIMESTAMP,
    TO_DT TIMESTAMP,
    CURRENT_FLAG BOOLEAN,
    ATTRIBUTE_HASH VARCHAR(32)
);

create or replace TABLE STORE_DB.DATA.FACT_STORE_SALES (
	TICKET_NUMBER NUMBER(38,0),
	CUSTOMER_ID NUMBER(38,0),
	ITEM_ID NUMBER(38,0),
	STORE_ID NUMBER(38,0),
	QUANTITY NUMBER(38,0),
	SALES_PRICE NUMBER(7,2),
	EXT_SALES_PRICE NUMBER(7,2),
	COUPON_AMT NUMBER(7,2),
	PAID_AMOUNT NUMBER(7,2),
	SOLD_AT TIMESTAMP_NTZ(9),
	SALE_YEAR NUMBER(4,0),
	SALE_MONTH NUMBER(2,0),
	SALE_DAY NUMBER(2,0),
	SALE_HOUR NUMBER(2,0),
	SALE_MINUTE NUMBER(2,0)
);
